### YamlMime:ManagedReference
items:
- uid: Scheduler.ISchedulerFactory
  commentId: T:Scheduler.ISchedulerFactory
  id: ISchedulerFactory
  parent: Scheduler
  children:
  - Scheduler.ISchedulerFactory.Create
  - Scheduler.ISchedulerFactory.Do(System.Func{Scheduler.IMessage,Scheduler.IMessage})
  - Scheduler.ISchedulerFactory.Start(Scheduler.IMessage)
  langs:
  - csharp
  - vb
  name: ISchedulerFactory
  nameWithType: ISchedulerFactory
  fullName: Scheduler.ISchedulerFactory
  type: Interface
  source:
    id: ISchedulerFactory
    path: C:\Users\user\source\repos\NewRepo4\AviaTickets\Scheduler\Scheduler\Abstractions\ISchedulerFactory.cs
    startLine: 8
  assemblies:
  - Scheduler
  namespace: Scheduler
  summary: "\nПланировщик заданий\n"
  example: []
  syntax:
    content: public interface ISchedulerFactory
    content.vb: Public Interface ISchedulerFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Scheduler.ISchedulerFactory.Create
  commentId: M:Scheduler.ISchedulerFactory.Create
  id: Create
  parent: Scheduler.ISchedulerFactory
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: ISchedulerFactory.Create()
  fullName: Scheduler.ISchedulerFactory.Create()
  type: Method
  source:
    id: Create
    path: C:\Users\user\source\repos\NewRepo4\AviaTickets\Scheduler\Scheduler\Abstractions\ISchedulerFactory.cs
    startLine: 14
  assemblies:
  - Scheduler
  namespace: Scheduler
  summary: "\nСоздание списка задач\n"
  example: []
  syntax:
    content: ISchedulerFactory Create()
    return:
      type: Scheduler.ISchedulerFactory
      description: Текущий планировщик заданий
    content.vb: Function Create As ISchedulerFactory
  overload: Scheduler.ISchedulerFactory.Create*
- uid: Scheduler.ISchedulerFactory.Do(System.Func{Scheduler.IMessage,Scheduler.IMessage})
  commentId: M:Scheduler.ISchedulerFactory.Do(System.Func{Scheduler.IMessage,Scheduler.IMessage})
  id: Do(System.Func{Scheduler.IMessage,Scheduler.IMessage})
  parent: Scheduler.ISchedulerFactory
  langs:
  - csharp
  - vb
  name: Do(Func<IMessage, IMessage>)
  nameWithType: ISchedulerFactory.Do(Func<IMessage, IMessage>)
  fullName: Scheduler.ISchedulerFactory.Do(System.Func<Scheduler.IMessage, Scheduler.IMessage>)
  type: Method
  source:
    id: Do
    path: C:\Users\user\source\repos\NewRepo4\AviaTickets\Scheduler\Scheduler\Abstractions\ISchedulerFactory.cs
    startLine: 20
  assemblies:
  - Scheduler
  namespace: Scheduler
  summary: "\nДобавление задачи в планировщик (список задач)\n"
  example: []
  syntax:
    content: ISchedulerFactory Do(Func<IMessage, IMessage> subprocess)
    parameters:
    - id: subprocess
      type: System.Func{Scheduler.IMessage,Scheduler.IMessage}
      description: Задача (должна принимать и возвращать IMessage)
    return:
      type: Scheduler.ISchedulerFactory
      description: Текущий планировщик заданий
    content.vb: Function Do(subprocess As Func(Of IMessage, IMessage)) As ISchedulerFactory
  overload: Scheduler.ISchedulerFactory.Do*
  nameWithType.vb: ISchedulerFactory.Do(Func(Of IMessage, IMessage))
  fullName.vb: Scheduler.ISchedulerFactory.Do(System.Func(Of Scheduler.IMessage, Scheduler.IMessage))
  name.vb: Do(Func(Of IMessage, IMessage))
- uid: Scheduler.ISchedulerFactory.Start(Scheduler.IMessage)
  commentId: M:Scheduler.ISchedulerFactory.Start(Scheduler.IMessage)
  id: Start(Scheduler.IMessage)
  parent: Scheduler.ISchedulerFactory
  langs:
  - csharp
  - vb
  name: Start(IMessage)
  nameWithType: ISchedulerFactory.Start(IMessage)
  fullName: Scheduler.ISchedulerFactory.Start(Scheduler.IMessage)
  type: Method
  source:
    id: Start
    path: C:\Users\user\source\repos\NewRepo4\AviaTickets\Scheduler\Scheduler\Abstractions\ISchedulerFactory.cs
    startLine: 26
  assemblies:
  - Scheduler
  namespace: Scheduler
  summary: "\nЗапуск выполнения очереди задач\n"
  example: []
  syntax:
    content: IMessage Start(IMessage msg = null)
    parameters:
    - id: msg
      type: Scheduler.IMessage
      description: Сообщение с данными для первой задачи планировщика
    return:
      type: Scheduler.IMessage
      description: Сообщение с данными от последнего элемента планировщика
    content.vb: Function Start(msg As IMessage = Nothing) As IMessage
  overload: Scheduler.ISchedulerFactory.Start*
references:
- uid: Scheduler
  commentId: N:Scheduler
  name: Scheduler
  nameWithType: Scheduler
  fullName: Scheduler
- uid: Scheduler.ISchedulerFactory.Create*
  commentId: Overload:Scheduler.ISchedulerFactory.Create
  name: Create
  nameWithType: ISchedulerFactory.Create
  fullName: Scheduler.ISchedulerFactory.Create
- uid: Scheduler.ISchedulerFactory
  commentId: T:Scheduler.ISchedulerFactory
  parent: Scheduler
  name: ISchedulerFactory
  nameWithType: ISchedulerFactory
  fullName: Scheduler.ISchedulerFactory
- uid: Scheduler.ISchedulerFactory.Do*
  commentId: Overload:Scheduler.ISchedulerFactory.Do
  name: Do
  nameWithType: ISchedulerFactory.Do
  fullName: Scheduler.ISchedulerFactory.Do
- uid: System.Func{Scheduler.IMessage,Scheduler.IMessage}
  commentId: T:System.Func{Scheduler.IMessage,Scheduler.IMessage}
  parent: System
  definition: System.Func`2
  name: Func<IMessage, IMessage>
  nameWithType: Func<IMessage, IMessage>
  fullName: System.Func<Scheduler.IMessage, Scheduler.IMessage>
  nameWithType.vb: Func(Of IMessage, IMessage)
  fullName.vb: System.Func(Of Scheduler.IMessage, Scheduler.IMessage)
  name.vb: Func(Of IMessage, IMessage)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scheduler.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Scheduler.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Scheduler.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Scheduler.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scheduler.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Scheduler.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Scheduler.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Scheduler.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Scheduler.ISchedulerFactory.Start*
  commentId: Overload:Scheduler.ISchedulerFactory.Start
  name: Start
  nameWithType: ISchedulerFactory.Start
  fullName: Scheduler.ISchedulerFactory.Start
- uid: Scheduler.IMessage
  commentId: T:Scheduler.IMessage
  parent: Scheduler
  name: IMessage
  nameWithType: IMessage
  fullName: Scheduler.IMessage
